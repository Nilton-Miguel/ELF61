==================================================================
-- ELF61 - Arquitetura e Organizacao de Computadores

-- Equipe 02 - 06/02/2025

-- Ana Paula Rodrigues Raimundo     - 1862197
-- Joao Vitor Santos Anacleto       - 1802836
-- Nilton Miguel Guimaraes de Souza - 2237164
==================================================================
-- Formatos das instruções
==================================================================

RRR

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   op2    |    op1   |     r    |     s    |    t     |    op0   |
+----------+----------+----------+----------+----------+----------+




RRI8

23                    15         11         7          3          0
+---------------------+----------+----------+----------+----------+
|       imm8          |     r    |     s    |   op1    |    op0   |
+---------------------+----------+----------+----------+----------+




CALL

23                                               5     3          0
+------------------------------------------------+-----+----------+
|                  offset18                      |  n  |    op0   |
+------------------------------------------------+-----+----------+



==================================================================
-- Instruções
==================================================================

__________________________________________________________________
ADD - Adição entre registradores - Formato RRR

r <- s + t

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   1000   |   0000   |    r     |     s    |    t     |   0000   |
+----------+----------+----------+----------+----------+----------+



__________________________________________________________________
SUB - Subtração entre registradores - Formato RRR

r <- s - t

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   1100   |   0000   |    r     |     s    |    t     |   0000   |
+----------+----------+----------+----------+----------+----------+



__________________________________________________________________
ADDI - Adição com immediato (Carga de constante) - Formato RRI8

r <- s + imm8

23                    15         11         7          3          0
+---------------------+----------+----------+----------+----------+
|       imm8          |    r     |     s    |   1100   |   0010   |
+---------------------+----------+----------+----------+----------+



__________________________________________________________________
MOV - Mover valores entre registradores - Formato RRR

(equivalente a uma soma com o registrador $0)

r <- 0 + t

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   1000   |   0000   |    r     |   0000   |    t     |   0000   |
+----------+----------+----------+----------+----------+----------+



__________________________________________________________________
DIV - Divisão entre registradores - Formato RRR

r <- s / t

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   0111   |   1010   |    r     |     s    |    t     |   0000   |
+----------+----------+----------+----------+----------+----------+



__________________________________________________________________
SLLI - Shift lógico à esquerda com imediato - Formato RRR

r <- [s com shift de integer(b_edcba) bit]

23         19         15         11         7          3          0
+----------+----------+----------+----------+----------+----------+
|   000e   |   0001   |     r    |     s    |   dcba   |   0000   |
+----------+----------+----------+----------+----------+----------+




==================================================================
-- Saltos
==================================================================



__________________________________________________________________
J - Salto Incondicional - Formato CALL

proxPC <- PC + offset18 + 1

23                                               5     3          0
+------------------------------------------------+-----+----------+
|                  offset18                      | 00  |   0110   |
+------------------------------------------------+-----+----------+


__________________________________________________________________
BEQ - Salto condicional - Formato CALL

as flags agora são embarcadas num barramento de 16 bits saindo diretamente da ULA e salvas num registrador que só tem permissão de escrita em instruções aritméticas. A estrutura do barramento até esta versão é:

flags:

15                                         1           0          
+------------------------------------------+-----------+----------+
|                don't care                |  flag_gt  |  flag_z  |
+------------------------------------------+-----------+----------+

usando o formato CALL podemos codificar duas flags de interesse em X e Y e compará-las às flags do barramento:

23                                               5     3          0
+------------------------------------------------+-----+----------+
|                  offset18                      | XY  |   1001   |
+------------------------------------------------+-----+----------+

|Se ( X for igual à flag_gt ) e ( Y for igual à flag_z )
|
|então:
|
|   proxPC <- PC + offset18 + 1
